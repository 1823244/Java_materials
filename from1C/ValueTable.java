/**
*	от автора с ником Garykom
*	http://www.forum.mista.ru/topic.php?id=484864
*/

private String КлючСтрокиГруппировки(ArrayList<КолонкаТаблицыЗначений> КолонкиГрупп, СтрокаТаблицыЗначений Строка) { 
       String Результат = ""; 
       Iterator i = КолонкиГрупп.iterator(); 
       while (i.hasNext()) { 
           КолонкаТаблицыЗначений Колонка = (КолонкаТаблицыЗначений) i.next(); 
           Object Значение = Строка.Получить(Колонка); 
           Результат = Результат + ";" + Значение; 
       } 
       return Результат; 
   } 

   private void СкопироватьДанные(ArrayList<КолонкаТаблицыЗначений> КолонкиГрупп, СтрокаТаблицыЗначений СтрокаИсточник, СтрокаТаблицыЗначений СтрокаПолучатель) { 
       Iterator i = КолонкиГрупп.iterator(); 
       while (i.hasNext()) { 
           КолонкаТаблицыЗначений Колонка = (КолонкаТаблицыЗначений) i.next(); 
           Object Значение = СтрокаИсточник.Получить(Колонка); 
           СтрокаПолучатель.Установить(Колонка, Значение); 
       } 
   } 

   private Object СложитьЧисла(Object Число1, Object Число2) { 
       Object Результат = null; 

       Number ч1 = 0; 
       Number ч2 = 0; 
       if (Число1 != null) { 
           ч1 = (Number) Число1; 
       } 
       if (Число2 != null) { 
           ч2 = (Number) Число2; 
       } 
       Double Сумма = ч1.doubleValue() + ч2.doubleValue(); 

       if (Сумма.doubleValue() == Сумма.intValue()) { 
           Результат = Сумма.intValue(); 
       } else { 
           Результат = Сумма; 
       } 

       return Результат; 
   } 

   private void СложитьДанные(ArrayList<КолонкаТаблицыЗначений> КолонкиСумм, СтрокаТаблицыЗначений СтрокаИсточник, СтрокаТаблицыЗначений СтрокаПолучатель) { 
       Iterator i = КолонкиСумм.iterator(); 
       while (i.hasNext()) { 
           КолонкаТаблицыЗначений Колонка = (КолонкаТаблицыЗначений) i.next(); 
           Object Значение = СтрокаИсточник.Получить(Колонка); 
           Object Сумма = СтрокаПолучатель.Получить(Колонка); 
           Сумма = СложитьЧисла(Сумма, Значение); 
           СтрокаПолучатель.Установить(Колонка, Сумма); 
       } 
   } 

   public void Свернуть(String КолонкиГруппировка, String КолонкиСуммирование) { 
       ArrayList<КолонкаТаблицыЗначений> КолонкиГрупп = НайтиКолонки(КолонкиГруппировка); 
       ArrayList<КолонкаТаблицыЗначений> КолонкиСумм = НайтиКолонки(КолонкиСуммирование); 

       Hashtable НовыеДанные = new Hashtable(); 

       Iterator i = Данные.iterator(); 
       while (i.hasNext()) { 
           СтрокаТаблицыЗначений Строка = (СтрокаТаблицыЗначений) i.next(); 
           String Ключ = КлючСтрокиГруппировки(КолонкиГрупп, Строка); 
           СтрокаТаблицыЗначений НовСтрока = (СтрокаТаблицыЗначений) НовыеДанные.get(Ключ); 
           if (НовСтрока == null) { 
               НовСтрока = new СтрокаТаблицыЗначений(this); 
               НовыеДанные.put(Ключ, НовСтрока); 
           } 
           СкопироватьДанные(КолонкиГрупп, Строка, НовСтрока); 
           СложитьДанные(КолонкиСумм, Строка, НовСтрока); 
       } 
       Очистить(); 
       Колонки.Очистить(); 

       i = КолонкиГрупп.iterator(); 
       while (i.hasNext()) { 
           КолонкаТаблицыЗначений Колонка = (КолонкаТаблицыЗначений) i.next(); 
           Колонки.Добавить(Колонка); 
       } 
       i = КолонкиСумм.iterator(); 
       while (i.hasNext()) { 
           КолонкаТаблицыЗначений Колонка = (КолонкаТаблицыЗначений) i.next(); 
           Колонки.Добавить(Колонка); 
       } 
       Enumeration e = НовыеДанные.elements(); 
       while (e.hasMoreElements()) { 
           СтрокаТаблицыЗначений Строка = (СтрокаТаблицыЗначений) e.nextElement(); 
           Данные.add(Строка); 
       } 

       Сортировать(КолонкиГруппировка); 
   }